plugins {
    id "groovy"
    id "java-gradle-plugin"
    id "idea"
    id 'maven-publish'
    id "com.gradle.plugin-publish" version "0.16.0"
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation 'com.bmuschko:gradle-docker-plugin:7.4.0'

    testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
}

String pluginDescription = "Gradle plugin for managing Docker containers, specifically in the context of the local and CI build/test lifecycle.  " +
        "This plugin provides a handy DSL for the excellent https://github.com/bmuschko/gradle-docker-plugin."

pluginBundle {
    website = 'https://github.com/betterdevxp/gradle-docker-dsl-plugin'
    vcsUrl = 'https://github.com/betterdevxp/gradle-docker-dsl-plugin.git'
    tags = ['gradle', 'docker', 'testing']
    description = pluginDescription
}

gradlePlugin {
    plugins {
        dockerDsl {
            id = 'org.betterdevxp.docker-dsl'
            displayName = "Docker DSL"
            description = pluginDescription
            implementationClass = 'org.betterdevxp.dockerdsl.DockerDslPlugin'
        }
    }
}

sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}
